import org.apache.tools.ant.filters.ReplaceTokens


plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.3'
    id 'io.freefair.lombok' version '8.12'
}

group = "com.mcdragonmasters"
version = "1.0.0"

repositories {
    mavenCentral()
    mavenLocal()
    // Paper
    maven {url = "https://repo.papermc.io/repository/maven-public/"}

    // VaultAPI
    maven {url = "https://jitpack.io"}

    // ConfigUpdater
    maven {url = "https://oss.sonatype.org/content/groups/public"}
}

dependencies {
    // Paper
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")

    // CommandAPI
    implementation("dev.jorel:commandapi-bukkit-shade-mojang-mapped:9.7.0")

    // VaultAPI
    compileOnly("com.github.MilkBowl:VaultAPI:1.7.1")

    // Config-Updater
    implementation("com.tchristofferson:ConfigUpdater:2.2-SNAPSHOT")
}
build {
    dependsOn(shadowJar)
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.compilerArgs.add("-Xlint:unchecked")
            options.compilerArgs.add("-Xlint:deprecation")
        }
    }
}
shadowJar {
    archiveClassifier = null
    relocate("dev.jorel.commandapi", "com.mcdragonmasters.potatoessentials.commandapi")
    relocate("com.tchristofferson.configupdater", "com.mcdragonmasters.potatoessentials.configupdater")
}
java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}

def oldestJava = 21
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-source', '' + oldestJava, '-target', '' + oldestJava]
}
tasks.register('server', Copy) {
    from shadowJar
    // Change this to wherever you want your jar to build
    into '\\\\192.168.1.46\\dev\\plugins'
}

processResources {
    filter ReplaceTokens, tokens: [
    "version": version
  ]
    from ("lang") {
        include "**/*"
        into "lang/"
    }
}
